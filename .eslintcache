[{"C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\index.js":"1","C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\App.js":"2","C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\components\\Navigation.js":"4","C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\components\\Home.js":"5","C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\components\\Form.js":"6"},{"size":571,"mtime":1607491677352,"results":"7","hashOfConfig":"8"},{"size":1089,"mtime":1607491659868,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607438262934,"results":"10","hashOfConfig":"8"},{"size":5781,"mtime":1607460710432,"results":"11","hashOfConfig":"8"},{"size":164,"mtime":1607445180897,"results":"12","hashOfConfig":"8"},{"size":6162,"mtime":1607460688215,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j9uuw7",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},"C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\index.js",[],"C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\App.js",[],"C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\reportWebVitals.js",[],["29","30"],"C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\components\\Navigation.js",["31"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline'\r\nimport {\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n} from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    linkDefault: {\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            color: 'inherit',\r\n            textDecoration: 'none',\r\n        },\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n    const list = [\r\n        { title: 'Orders', to: '/orders', icon: <AddShoppingCartIcon/> },\r\n        {title: 'Return', to: '/return', icon: <RemoveCircleOutlineIcon/>},\r\n    ]\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        Shiprocket\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {list.map((item, pos) => (\r\n            <Link\r\n              key={pos}\r\n              to={{ pathname: item.to }}\r\n              className={classes.linkDefault}\r\n            >\r\n              <ListItem button>\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\components\\Home.js",[],"C:\\Users\\user\\Desktop\\proj\\Form\\my-app\\src\\components\\Form.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider,\r\n  InputAdornment\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    height: 50,\r\n    padding: 10,\r\n    paddingLeft:55,\r\n    color: 'white'\r\n  },\r\n  formHeadings: {\r\n    margin: 20,\r\n    marginBottom:0\r\n  }\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n  const [phoneNumber, setphoneNumber] = useState(0);\r\n  const [altPhoneNumber, setaltPhoneNumber] = useState(0);\r\n  const [email, setemail] = useState('');\r\n  const [add1, setadd1] = useState('');\r\n  const [add2, setadd2] = useState('');\r\n  const [pin, setpin] = useState(0);\r\n  const [city, setcity] = useState('');\r\n  const [state, setstate] = useState('');\r\n  const [country, setcountry] = useState('');\r\n  const [companyName, setcompanyName] = useState('');\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent style={{padding: 0}}>\r\n        <Typography className={classes.title} gutterBottom style={{ backgroundColor:'#66bb6a'}}>\r\n          Buyers Details\r\n        </Typography>\r\n        <form>\r\n          <Typography className={classes.formHeadings}>Buyer details</Typography>\r\n          <Grid container spacing={3} style={{padding:50, paddingTop:10, paddingBottom:20}}>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                required\r\n                id=\"Name\"\r\n                name=\"Name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                autoComplete=\"given-name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"Phone\"\r\n                name=\"Phone\"\r\n                label=\"Phone Number\"\r\n                fullWidth\r\n                autoComplete=\"Phone\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">+91</InputAdornment>,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                type=\"number\"\r\n                id=\"AltPhone\"\r\n                name=\"AltPhone\"\r\n                label=\"Alternate Phone Number\"\r\n                fullWidth\r\n                autoComplete=\"Phone\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">+91</InputAdornment>,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                required\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                fullWidth\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n          <Typography className={classes.formHeadings} >Buyer Address</Typography>\r\n            \r\n          <Grid container spacing={3} style={{ padding: 50, paddingTop: 10 }}>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                fullWidth\r\n                autoComplete=\"shipping address-line1\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                fullWidth\r\n                autoComplete=\"shipping address-line2\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                fullWidth\r\n                autoComplete=\"shipping address-level2\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField required id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"zip\"\r\n                name=\"zip\"\r\n                label=\"Zip / Postal code\"\r\n                fullWidth\r\n                autoComplete=\"shipping postal-code\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                required\r\n                id=\"country\"\r\n                name=\"country\"\r\n                label=\"Country\"\r\n                fullWidth\r\n                autoComplete=\"shipping country\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"company name\"\r\n                name=\"company name\"\r\n                label=\"Company Name (Optional)\"\r\n                fullWidth\r\n                autoComplete=\"shipping company name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                label=\"Use this address for payment details\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'flex-end',\r\n              margin:20\r\n            }}\r\n          >\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Next\r\n              </Button>\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":126,"column":11,"nodeType":"60","messageId":"61","endLine":126,"endColumn":27},{"ruleId":"58","severity":1,"message":"62","line":36,"column":10,"nodeType":"60","messageId":"61","endLine":36,"endColumn":14},{"ruleId":"58","severity":1,"message":"63","line":36,"column":16,"nodeType":"60","messageId":"61","endLine":36,"endColumn":23},{"ruleId":"58","severity":1,"message":"64","line":37,"column":10,"nodeType":"60","messageId":"61","endLine":37,"endColumn":21},{"ruleId":"58","severity":1,"message":"65","line":37,"column":23,"nodeType":"60","messageId":"61","endLine":37,"endColumn":37},{"ruleId":"58","severity":1,"message":"66","line":38,"column":10,"nodeType":"60","messageId":"61","endLine":38,"endColumn":24},{"ruleId":"58","severity":1,"message":"67","line":38,"column":26,"nodeType":"60","messageId":"61","endLine":38,"endColumn":43},{"ruleId":"58","severity":1,"message":"68","line":39,"column":10,"nodeType":"60","messageId":"61","endLine":39,"endColumn":15},{"ruleId":"58","severity":1,"message":"69","line":39,"column":17,"nodeType":"60","messageId":"61","endLine":39,"endColumn":25},{"ruleId":"58","severity":1,"message":"70","line":40,"column":10,"nodeType":"60","messageId":"61","endLine":40,"endColumn":14},{"ruleId":"58","severity":1,"message":"71","line":40,"column":16,"nodeType":"60","messageId":"61","endLine":40,"endColumn":23},{"ruleId":"58","severity":1,"message":"72","line":41,"column":10,"nodeType":"60","messageId":"61","endLine":41,"endColumn":14},{"ruleId":"58","severity":1,"message":"73","line":41,"column":16,"nodeType":"60","messageId":"61","endLine":41,"endColumn":23},{"ruleId":"58","severity":1,"message":"74","line":42,"column":10,"nodeType":"60","messageId":"61","endLine":42,"endColumn":13},{"ruleId":"58","severity":1,"message":"75","line":42,"column":15,"nodeType":"60","messageId":"61","endLine":42,"endColumn":21},{"ruleId":"58","severity":1,"message":"76","line":43,"column":10,"nodeType":"60","messageId":"61","endLine":43,"endColumn":14},{"ruleId":"58","severity":1,"message":"77","line":43,"column":16,"nodeType":"60","messageId":"61","endLine":43,"endColumn":23},{"ruleId":"58","severity":1,"message":"78","line":44,"column":10,"nodeType":"60","messageId":"61","endLine":44,"endColumn":15},{"ruleId":"58","severity":1,"message":"79","line":44,"column":17,"nodeType":"60","messageId":"61","endLine":44,"endColumn":25},{"ruleId":"58","severity":1,"message":"80","line":45,"column":10,"nodeType":"60","messageId":"61","endLine":45,"endColumn":17},{"ruleId":"58","severity":1,"message":"81","line":45,"column":19,"nodeType":"60","messageId":"61","endLine":45,"endColumn":29},{"ruleId":"58","severity":1,"message":"82","line":46,"column":10,"nodeType":"60","messageId":"61","endLine":46,"endColumn":21},{"ruleId":"58","severity":1,"message":"83","line":46,"column":23,"nodeType":"60","messageId":"61","endLine":46,"endColumn":37},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'fixedHeightPaper' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setphoneNumber' is assigned a value but never used.","'altPhoneNumber' is assigned a value but never used.","'setaltPhoneNumber' is assigned a value but never used.","'email' is assigned a value but never used.","'setemail' is assigned a value but never used.","'add1' is assigned a value but never used.","'setadd1' is assigned a value but never used.","'add2' is assigned a value but never used.","'setadd2' is assigned a value but never used.","'pin' is assigned a value but never used.","'setpin' is assigned a value but never used.","'city' is assigned a value but never used.","'setcity' is assigned a value but never used.","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","'country' is assigned a value but never used.","'setcountry' is assigned a value but never used.","'companyName' is assigned a value but never used.","'setcompanyName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]